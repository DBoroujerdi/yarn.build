on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          yarn install && \
          cd ./packages/plugins/plugin-build && \
          yarn release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          # Blocked by this PR https://github.com/actions/create-release/pull/10
          # body: |
          #   To install:
          #   ```
          #   yarn plugin import https://github.com/ojkelly/yarn.build/releases/download/${{ github.ref }}/plugin-build.js
          #   ```
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./packages/plugins/plugin-build/bundles/@yarnpkg/plugin-build.js
          asset_name: "plugin-build.js"
          asset_content_type: text/javascript

      - name: Update release
        run: |
          export TAGNAME=$(echo "${{ github.ref }}" | sed 's|refs/tags/||g')
          sed -i'' '3s|.*| to = "https://github.com/ojkelly/yarn.build/releases/download/$TAGNAME/plugin-build.js"|' netlify.toml

      # Commit new version
      - uses: EndBug/add-and-commit@v5
        with:
          add: "netlify.toml"
          author_name: yarn.BUILD Actions
          author_email: actions@yarn.build
          branch: trunk
          message: "[Action] Update the release version"
          push: true
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
